DimensionType.2D=二维
DimensionType.2DWithDepth=二维并具有深度
DimensionType.3D=三维
Shared.Lbl.OK=\ \ \ 确定   
Shared.Lbl.Cancel=取消
ButtonPanel.Lbl.SelectChartType=<< 选择图表类型
ButtonPanel.Lbl.Previous=< 上一步
ButtonPanel.Lbl.Next=下一步 >
ChartAdapter.Info.NotificationRecieved=ChartAdapter: 收到关于 {0} 的通知
ChartAdapter.Info.NewValue=ChartAdapter: 新值为 {0}
ChartSelector.Lbl.ChartSubtypes=图表子类型
ChartDlg.Msg.ValidationErrors=验证图表定义时发现错误\n请在查看报表前改正这些问题。\n\n
ChartDlg.Msg.AskCorrectLater=\n是否要关闭图表生成器\n并以后解决这些问题？
ChartDlg.Info.ChartDimension=维:          
ChartDlg.Info.AxisOrientation=\t方向:    
ChartSelector.Lbl.ChartTypes2=图表类型
ChartSelector.Lbl.DefineChart=定义图表 >>
ChartDlg.Info.AssociatedAxis=\t\t关联轴:    
ChartDlg.Info.LineThickness2=\t线条粗细: 
ChartSelector.Lbl.ChartTypes=图表类型:
ChartSelector.Lbl.Transposed=转置
ChartAdapter.Exception.Exception=例外:
ChartAdapter.Exception.WrappedIn=用括号括起:
ChartUIUtil.Exception.NoValueReturned=没有返回值。请指定有效的数据集。
ChartAdapter.Exception.Message=消息:
ChartDlg.Info.CannotChangeSelection=注:如果当前表不具有类型或子类型集，则您无法更改图表选择。
ChartAdapter.Exception.Trace=跟踪:
ChartSelector.Title.ChartSelector=图表选择器
ChartDlg.Title.ValidationResults=验证结果
ChartDlg.Title.ChartBuilder=图表对话框
DefaultUIServiceProviderImpl.Warn.Placeholder=DefaultUIServiceProviderImpl :是一个占位符号类，它不执行任何操作。
SheetPlaceHolder.Lbl.Placeholder=是 {0} 的一个占位符
ChartDlg.Info.ChartStart=--------------------------- 图表属性开始 -------------------------
ChartDlg.Info.ChartType=类型:                
ChartDlg.Info.ChartSubType=子类型:            
ChartDlg.Info.Orientation=方向:        
ChartDlg.Info.AxisCount=轴数:        
ChartDlg.Info.AxisStart=--------------------------- 轴信息----------------------------
ChartDlg.Info.AxisTitle=\t标题:          
ChartDlg.Info.SeriesCount=\t系列数:  
ChartDlg.Info.SeriesStart=--------------------------- 系列信息 ----------------------------
ChartDlg.Info.DataSource=\t\t第一个源:   
ChartDlg.Info.SeriesType=\t\t系列类型:    
ChartDlg.Info.Riser=\t\t上升器:          
ChartDlg.Info.LineStyle=\t\t线条样式:     
ChartDlg.Info.Fill=\t\t填充:       
ChartDlg.Info.LineStyle2=\t\t线条样式: 
ChartDlg.Info.Values=\t\t值:         
ChartDlg.Info.AxisEnd=--------------------------- 轴信息----------------------------
ChartDlg.Info.ChartEnd=--------------------------- 图表属性结束 -------------------------
ChartDlg.Info.ChartStart2=--------------------------- 图表属性开始 -------------------------
ChartDlg.Info.ChartType2=类型:        
ChartSelector.Lbl.Accept=接受
ChartWizard.Title.ChartBuilder=图表生成器
ChartWizard.Title.NewChart=新建图表
ChartWizard.Title.EditChart=编辑图表
ChartUIUtil.StockExp.Low=低
ChartUIUtil.Font.Auto=自动
ChartDlg.Info.ChartSubType2=子类型:        
ChartSelector.Lbl.Dimension=维(&D):
ChartSelector.Lbl.EditChart=编辑图表 >>
ChartDlg.Info.Dimension=维:        
ChartDlg.Info.SeriesCount2=系列数:
ChartDlg.Info.SeriesStart2=--------------------------- 系列信息 ----------------------------
ChartSelector.Lbl.Subtypes=子类型:
ChartUIUtil.StockExp.Close=关闭
ChartDlg.Info.DataSource2=\t第一个源:   
ChartDlg.Info.SeriesType2=\t系列类型:    
ChartUIUtil.StockExp.High=高
ChartUIUtil.StockExp.Open=打开
ChartDlg.Info.Riser2=\t上升器:          
ChartDlg.Info.Values2=\t值:         
ChartDlg.Info.ChartEnd2=--------------------------- 图表属性结束 -------------------------
PreviewButtonPanel.Lbl.ShowPreview=图表示例 >>
PreviewButtonPanel.Lbl.HidePreview=<< 图表示例
PreviewPanel.Title.Preview=图表示例
ChartWizard.Label.SelectChartTypeDataFormat=选择图表类型、数据和格式。
TaskSelectType.Caption.OverlayAxis1=Y 轴标题
ApplyButtonHandler.Label.Apply=应用

ChartUIUtil.GanttExp.Label=Task Label
ChartUIUtil.GanttExp.Start=开始日期
ChartUIUtil.GanttExp.End=结束日期
ChartUIUtil.BubbleExp.Label=Y 值
ChartUIUtil.BubbleExp.Size=大小
ChartUIUtil.DifferenceExp.Postive=正
ChartUIUtil.DifferenceExp.Negative=负

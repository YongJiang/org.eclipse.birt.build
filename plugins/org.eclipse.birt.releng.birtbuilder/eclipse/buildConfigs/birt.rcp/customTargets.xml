<project name="Build specific targets and properties" default="noDefault" basedir=".">

	<property name="postingDirectory" value="${buildDirectory}" />
	<property name="package.version" value="2_3_0" />
	<property name="archiveName" value="birt-rcp-report-designer-${package.version}.zip"/>

	
	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- ===================================================================== -->
	<target name="allElements">
		<ant antfile="${genericTargets}" target="${target}" >
			<property name="type" value="feature" />
			<property name="id" value="org.eclipse.pde.build.container.feature" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->
	
	<!--
	<target name="assemble.org.eclipse.birt.rcp">
		<property name="archiveName" value="birt-rcp-report-designer-${package.version}.zip"/>
		<antcall target="assemble" />
	</target>
	-->

	<target name="assemble.org.eclipse.pde.build.container.feature.win32.win32.x86">
		<property name="archiveName" value="birt-rcp-report-designer-${package.version}.zip"/>
		<antcall target="assemble" />
	</target>


	<target name="assemble">
		<property name="archiveFullPath" value="${buildDirectory}/${buildLabel}/${archiveName}" />
		<ant antfile="${assembleScriptName}" />
	</target>
	
	<target name="postPackage">
		<move todir="${postingDirectory}/${buildId}">
			<fileset dir="${buildDirectory}/${buildId}">
		 		<include name="${archiveName}" />
		 	</fileset>
		</move>
		<property file="${buildDirectory}/finalPluginsVersions.properties"/>
		<exec executable="unzip" dir="${postingDirectory}/${buildId}">
		    <arg line="-o -q ${archiveName} -d ${postingDirectory}/${buildId}/rcp" />
		</exec>
		<delete file="${postingDirectory}/${buildId}/${archiveName}" failonerror="false"/>
		<!-- extract birt.resources, engine.fonts, and five doc plugins as directory  -->

		<echo message="unzip org.eclipse.birt.resources..."/>
		<exec executable="unzip" dir="${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins">
		    <arg line="-o -q org.eclipse.birt.resources_${org.eclipse.birt.resources}.jar -d ${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins/org.eclipse.birt.resources_${org.eclipse.birt.resources}" />
		</exec>
		<echo message="unzip org.eclipse.birt.report.engine.fonts..."/>
		<exec executable="unzip" dir="${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins">
		    <arg line="-o -q org.eclipse.birt.report.engine.fonts_${org.eclipse.birt.report.engine.fonts}.jar -d ${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins/org.eclipse.birt.report.engine.fonts_${org.eclipse.birt.report.engine.fonts}" />
		</exec>

		<!-- Fix [230350] Below bundles should be shipped as Jar'ed plugin -->
		<!--
		<echo message="unzip org.eclipse.birt.doc..."/>
		<exec executable="unzip" dir="${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins">
		    <arg line="-o -q org.eclipse.birt.doc_${org.eclipse.birt.doc}.jar -d ${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins/org.eclipse.birt.doc_${org.eclipse.birt.doc}" />
		</exec>
		<echo message="unzip org.eclipse.birt.chart.doc.isv..."/>
		<exec executable="unzip" dir="${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins">
		    <arg line="-o -q org.eclipse.birt.chart.doc.isv_${org.eclipse.birt.chart.doc.isv}.jar -d ${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins/org.eclipse.birt.chart.doc.isv_${org.eclipse.birt.chart.doc.isv}" />
		</exec>
		<echo message="unzip org.eclipse.birt.chart.cshelp..."/>
		<exec executable="unzip" dir="${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins">
		    <arg line="-o -q org.eclipse.birt.chart.cshelp_${org.eclipse.birt.chart.cshelp}.jar -d ${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins/org.eclipse.birt.chart.cshelp_${org.eclipse.birt.chart.cshelp}" />
		</exec>
		<echo message="unzip org.eclipse.birt.cshelp..."/>
		<exec executable="unzip" dir="${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins">
		    <arg line="-o -q org.eclipse.birt.cshelp_${org.eclipse.birt.cshelp}.jar -d ${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins/org.eclipse.birt.cshelp_${org.eclipse.birt.cshelp}" />
		</exec>
		<echo message="unzip org.eclipse.birt.doc.isv..."/>
		<exec executable="unzip" dir="${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins">
		    <arg line="-o -q org.eclipse.birt.doc.isv_${org.eclipse.birt.doc.isv}.jar -d ${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins/org.eclipse.birt.doc.isv_${org.eclipse.birt.doc.isv}" />
		</exec>
		-->
		<delete>
			<fileset dir="${postingDirectory}/${buildId}/rcp/birt-rcp-report-designer-${package.version}/plugins">
				<include name="org.eclipse.birt.doc_*.jar"/>
				<include name="org.eclipse.birt.cshelp_*.jar"/>
				<include name="org.eclipse.birt.doc.isv_*.jar"/>
				<include name="org.eclipse.birt.chart.doc.isv_*.jar"/>
				<include name="org.eclipse.birt.chart.cshelp_*.jar"/>
				<include name="org.eclipse.birt.resources_*.jar"/>
				<include name="org.eclipse.birt.report.engine.fonts_*.jar"/>
			</fileset>
		</delete>
    	<exec executable="zip" dir="${postingDirectory}/${buildId}/rcp">
            <arg line="-q ${postingDirectory}/${buildId}/${archiveName} -r birt-rcp-report-designer-${package.version}" />
        </exec>
		
        <delete dir="${postingDirectory}/${buildId}/rcp" failonerror="false" />

	</target>
	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
	<!-- ===================================================================== -->
	<target name="checkLocal">
		<available property="mapsLocal" file="${buildDirectory}/maps/source/org.eclipse.birt.releng" />
	</target>
	
	<target name="getMapFiles" depends="checkLocal" unless="mapsLocal">

		<!-- ***  change the repo info -->
		<property name="mapCvsRoot" value=":pserver:anonymous@dev.eclipse.org:/cvsroot/birt" />
		<property name="mapVersionTag" value="HEAD" />
		<cvs cvsRoot="${mapCvsRoot}"
			package="source/org.eclipse.birt.releng"
			dest="${buildDirectory}/maps"
			tag="${mapVersionTag}"
		/>
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the fetch -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>
	
	<!-- ===================================================================== -->
	<!-- Steps to do before generating build scripts -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>


	<!-- ===================================================================== -->
	<!-- Steps to do before assembling -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after assembling-->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
		<condition property="logsAvailable">
			<istrue value="${javacVerbose}"/> 
		</condition>
		<antcall target="gatherLogs" />
	</target>

	<target name="prePackage" />
	

	<!-- ===================================================================== -->
	<!-- Steps to do after everything is built and assembled -->
	<!-- (e.g., testing, posting, emailing, ...) -->
	<!-- ===================================================================== -->
	<target name="postBuild">
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="gatherLogs" if="logsAvailable">
		<mkdir dir="${postingDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
	
		<unzip dest="${postingDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features/org.eclipse.pde.build.container.feature">
				<include name="*.log.zip" />
			</fileset>
		</unzip>
	</target>
	
	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>
	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
